html, body {
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  font-family: Arial,sans-serif;
  font-size: 10pt;
}
body {
  /*max-width: 400px;*/ /* One-column view even on wide screens */
  position: relative; /* Absolute-positioned pages stick to us */
}
.page {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  box-sizing: border-box; /* incl. pad and marg in WH */
  position: absolute; /* relative to body */
  left: 0;
  top: 0;
  background-color: white; /* hide everything underneath */
}


/*
Special classes that are applied in certain situations
*/
/* A way to hide any elements without overwriting their display: property. */
.hidden {
  display: none !important;
}
/* Applied to the last focused task entry. It'll be the target of operations */
.focused {}

/*
Error message popup
*/
#errorPopup {
  position: fixed;
  bottom: 1em;
  left: 50%;
  transform: translateX(-50%);
  border: LightGrey 1px solid;
  box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.2);
  padding: 1em;
}

/*
Task list selection box
Used in the main list and in the editor
*/
.taskListBox {}
.taskListBox.grayed, option.grayed {
  color: gray;
}
/* Offset tasklist entries -- when grouped by account */
.taskListBox option.offset {
  margin-left: 1em;
}
/* Account entries -- when grouped by account, or for accounts that failed to load */
.taskListBox .optionAccount {
  margin-left: 0;
}


/*
Task list page
Header sticks to top, footer sticks to bottom, the rest expands as content grows.
*/
#listPage { /* a .page */
  flex-direction: row;
}
#listPanel {
  width: 200px;
  flex-shrink: 0;
}
#listBody {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  overflow: auto; /* do not grow outside parent */
  width: 100%; /* do not shrink if less than 100% width required */
}
#listHeader {
  display: flex;
  flex-direction: row;
  /*align-items: baseline;*/ /* Not needed now that buttons are images */
  padding: 2px 2px;
  padding-bottom: 3px;
  /*border-bottom: LightGrey 1px solid;*/ /* A line under the title */
  /*margin-bottom: 4px;*/ /* A space under the line */
}

#listSelectBox { /* a taskListBox */
  font-family: Arial, sans-serif;
  font-size: 14px;
  font-weight: bold;
  border: 0px;
  /*min-width: 40%;*/
  /*min-width: 12em;*/
  /*margin-left: 10px;*/
  flex-grow:10;
  margin-right:4px;
}
#listContent,
#listMessages { /* both fill 100% height */
  width: 100%;
  flex: 1;
  overflow: auto; /* disable to "unstick" header   */
}
#listMessages {
  text-align: center;
  margin-top: 1em;
}
#listFooter {
  border-top: LightGrey 1px solid;
  /* Align buttons to the right */
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: baseline;
  padding: 3px 2px;
}
#activityIndicator {
  margin-right: auto; /* stick to the left */
}

/*
Activity indicator
*/
#activityIndicator {
  height: 8px;
  width: 8px;
  border-radius: 50%;
  display: inline-block;
  margin: auto;
  margin-left: 4px;
}
#activityIndicator { /* ready */
  background-color: lime;
}
#activityIndicator.working {
  background-color: orange;
}
#activityIndicator.error {
  background-color: red;
}


/* Splitters */
.splitter {
  width: 3px;
  background-color: LightGrey;
}
.splitterV { cursor: ew-resize; }
.splitterH { cursor: ns-resize; }


/*
Task list panel
  selected: Currently selected
  disabled: Not selectable
  grayed: Not fully functional but selectable
*/
#listPanel {
  display: flex;
  flex-direction: column;
  padding: 0px 0.1em;
  resize: horizontal; /* can be resized */
  overflow-x: hidden;
  overflow-y: auto; /* vertical scrollbar when needed */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; /* text unselectable (if the user accidentally double-clicks) */
}
@media(max-width: 600px) { #listPanel {
  display: none;
}}
#listSplitter {
  width: 4px;
  background-color: LightGrey; /* same as borders in the main pane */
    /* alternative: #E3E9FF */
}
#listPanel > li,
#listPanel > li:after {
  font-size: 1.05em;
  list-style-type: none;
  margin: 0px;
  padding: 0.3em 0.5em;
  border: 1px solid white;
}
#listPanel > li:not(.disabled),
#listPanel > li:not(.disabled):after {
  cursor: pointer;
}
#listPanel > li:hover:not(.disabled),
#listPanel > li:hover:not(.disabled):after {
  /* Different highlight: */
  background-color: #E3E9FF;
  border: 1px solid DodgerBlue;
  /* Same highlight as main menu button:
  background-color: LightSkyBlue; == #87CEFA
  border: 1px solid lightgray; */
}
#listPanel > .selected {
  /* Same as the focused task in the main list */
  border-top: 1px solid #F7E784;
  border-bottom: 1px solid #F7E784;
}
/* List panel title */
#listPanel > .title {
  display: none; /* currently hidden */
}
#listPanel > .account,
#listPanel > .accountAdd {
  margin: 0px;
  margin-top: 0.5em;
}
#listPanel > .accountAdd {
  color: gray;
  font-weight: normal;
}
/*
To replace "Add account" text:
#listPanel > .accountAdd {
  visibility:hidden;
}
#listPanel > .accountAdd:after {
  content: "ï¼‹"; -- to use a text
  content: url("res/plus2.png"); -- to use an image
  visibility: visible;
}
*/
#listPanel > .tasklist,
#listPanel > .tasklistAdd {
  list-style-type: none;
  /*color: DodgerBlue;*/
  /*color: #4D6C98;*/
  color: #4E6D9A;
  padding-left: 1.0em;
  font-weight: bold;
}
#listPanel > .tasklistAdd {
  color: gray;
  font-weight: normal;
}
#listPanel .grayed {
  color: gray;
}




/*
Dropdown basics
*/
.dropdown {
  position: relative;
  display: inline-block;
  cursor: pointer;
}
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 120px;
  box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.2);
  border: LightGrey 1px solid;
  z-index: 1;
  right:0;
}
/* Show the dropdown menu -- added to the dropdown-content when it's visible */
.dropdown-content.show {
  display:block;
}
/* Links inside the content */
.dropdown-content a {
  color: black;
  padding: 6px 8px;
  text-decoration: none;
  display: block;
}
.dropdown-content a:hover {
  background-color: #ddd;
}
.menu-separator {
  display: block;
  width: 95%;
  border-bottom: 1px solid lightgray;
  margin: 2px 2px;
}

/*
Main menu
*/
#mainmenu > .dropbtn {
  background-image: url("res/menu-20.png");
  min-width: 20px;
  min-height: 14px; /* 20 for square button */
  display: block;
  background-repeat: no-repeat;
  background-position: center;
  border: 1px solid lightgray;
  padding: 2px;
  box-sizing: content-box;
}
#mainmenu > .dropbtn:hover {
  background-color: LightSkyBlue;
}

/*
Bottom panel buttons
*/
.button {
  min-width: 20px;
  min-height: 20px;
  max-height: 20px;
  display: block;
  background-repeat: no-repeat;
  background-position: center;
  padding: 2px;
  box-sizing: content-box;
  font-color: DodgerBlue;
  font-weight: bold;
  cursor: pointer;
}
.button:hover {
  background-color: LightSkyBlue;
}
/* See https://codepen.io/sosuke/pen/Pjoqqp to generate filters: black->color */
#taskAddBtn {
  background-image: url("res/plus2.png");
}
#taskDeleteBtn {
  background-image: url("res/trash2.png");
}
#taskmenu .button {
  background-image: url("res/items3.png");
}
#taskAddBtn, #taskDeleteBtn, #taskmenu .button {
  filter: invert(41%) sepia(37%) saturate(581%) hue-rotate(176deg) brightness(91%) contrast(87%); /* black -> 4D6C98 */
}
#taskAddBtn:hover, #taskDeleteBtn:hover, #taskmenu .button:hover {
  background-color: white; /* will be filtered per above */
}

/*
Task menu
*/
#taskmenu {
}
#taskmenu .dropdown-content {
  right: 0;
  bottom: 24px;
}
#taskmenu .dropdown-content a {
  padding: 6px 8px;
}


/*
Task nodes
*/
.task {
  display: flex;
  flex-direction: row;
  cursor: text;
  position: relative;
  padding: 0 0.25em;
  /* To have some of the controls full-height,
  leave height padding==0 here and set margins on individual controls instead */
}

/* Task focus and mouseover */
.task {
  border-top: 1px solid white; /* So the size doesn't change on focus */
  border-bottom: 1px solid white;
}
.task.focused {
  border-top: 1px solid #F7E784;
  border-bottom: 1px solid #F7E784;
}
.task:hover {}

/*
Task dragging
*/
.task.dragging { /* Set while dragging the node */
  opacity: 0.75;
}
.dragging { /* Applied to the mouse shield */
  cursor: move;
}

/*
Task contents.
Everything inside is packed unless overriden
*/
.task * {
  padding: 0;
  margin: 0;
}

.taskGrip {
  background-image: url("res/grip.png");
  cursor: move;
  min-width: 10px;
  position: relative;
  visibility: hidden;
}
.childlvl-0 .taskGrip {
  min-width: 8px; /* slightly narrower for root nodes */
}
.task:hover .taskGrip {
  visibility: visible;
}
.task.dragging .taskGrip {
  visibility: visible;
  cursor: move;
}

.taskCheck {
  height: auto;
  /* Height margins must be coordinated with taskWrap */
  margin-top: 0.42em;
  margin-right: 0.38em;
  margin-left: 0.1em;
  /*margin-bottom: 0.25em;*/
  margin-bottom: auto;
}
.taskWrap {
  overflow: hidden; /* So taskNotes doesn't expand to content */
  width: 100%; /* So that click anywhere puts focus on title even if the contents is < 100% */
  margin: 0.25em 0; /* Height margin */
}
.taskTitle {}
.taskTitle:empty:before {
  /* Empty title collapses by height, making it hard to click into it. Preserve the height with this fake content */
  content: '\a0';
}
.taskNotesShort {
  /* Gray and small */
  font-size: 0.8em;
  color: gray;
  
  /* Nowrap and trim */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  
  /* Behaves like a link */
  cursor: pointer;
}
.taskNotesShort:hover {
  text-decoration: underline;
}
.taskDue {
  /* Gray and small */
  font-size: 0.7em;
  color: gray;
  
  /* Behaves like a link */
  cursor: pointer;
}
.taskDue:hover {
  text-decoration: underline;
}

/* Completed task decorations */
.task.completed {
  text-decoration: line-through;
  color: gray; /* all text, even the title */
}
/* Deleted task decorations */
.task.deleted {
  color: gray;
  text-decoration: line-through;
  text-decoration-style: double;
}
/* Remove task checks from deleted tasks to avoid confusing them with normal ones */
.task.deleted .taskCheck {
  visibility: hidden;
}


/* Edit link */
.task .taskEditLink {
  display: inline-block;
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.1em;
  padding-left: 0.2em;
  padding-bottom: 0.2em;
  cursor: pointer;
  font-weight: 900;
  /*height: 100%;*/
  visibility: hidden;
}
.task:hover .taskEditLink {
  visibility: visible;
}


/*
Editor
*/
#editorPage { /* a .page */
  height: 90%;
  /*
  If you want to allow expand to scroll:
    min-height: 100%;
    height: auto;
  But this will make it impossible to expand the textbox 100% by default
  */
  /*
  Elements inside #editor have margins. If padding is 0, they merge into #editor margins and add to its 100% width.
  Even 1px padding protects from that.
  */
  box-sizing: border-box;
  padding: 1px 5px;
}
/* Header */
/* Display the title and the buttons in the row */
#editorTaskTitleP {
  display: flex;
  flex-direction: row;
  align-items: baseline; /* Or flex stretches everything to 100% flex height */
  margin: 10px 0;
}
#editorTaskTitle {
  flex-grow: 5; /* This one should stetch */
}
#editorTaskListP {
  margin: 2px 0;
}
#editorTaskDateP {
  margin: 5px 0;
}
#editorTaskNotes {
  box-sizing: border-box;
  width: 100%;
  min-height: 70%;
  font-family: Arial, sans-serif;
  font-size: 10pt;
}
#editorMoveBackendNotice {
  margin-top: 0;
}
#editorControls {
  /* Align buttons to the right */
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: baseline;
  /* Stick to bottom: */
  /*position: absolute;
  bottom: 0;*/
}
#editorSaveContinue {
  margin-right: auto; /* <- to the left */
}
#editorSave {
  margin: 0px 5px;
  /*width: 6em;*/
}
#editorCancel {
  /*width: 6em;*/
}


/*
Account list page
*/
#accountListPage {
  flex-direction: row;
  padding: 0.4em;
}
#accountListPage select {
  flex-grow: 1; /* stretch */
  margin-right: 0.2em;
}
#accountListControls {
  display: flex;
  flex-direction: column;
  height: 100%;
}
#accountListClose {
  margin-top: auto; /* v to the bottom */
}
#accountListReset {
  color: red;
}
#accountListReset:disabled {
  color: gray;
}


/*
Backend selection page
*/
#backendSelectPage { /* a .page */
  justify-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
}
#backendSelectPage button {
  min-width: 180px;
  padding: 2px 5px;
  text-align: center;
}


/*
Settings page
*/
#settingsPage { /* a .page */
  padding: 1px 1em;
}
#settingsControls {
  /* Align buttons to the right */
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: baseline;
  /* Stick to bottom: */
  /*position: absolute;
  bottom: 0;*/
}
.settingsRow {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: baseline;
  width: 100%;
  padding-bottom: 0.2em;
  margin-bottom: 0.2em;
}
.settingsRow label {
  padding-right: 1em;
}
/* Checbkox labels / No value input labels => caption auto-flex-expands */
.settingsRow label {
  flex-grow: 1;
}
/* Value inputs AFTER labels auto-flex-expand */
.settingsRow label + input,
.settingsRow label + value {
  flex-grow: 10;
}
/* Hint requires 100% => forced onto a separate line */
.settingsHintText {
  width: 100%;
  padding-top: 0px;
  margin-top: 0px;
  margin-left: 1.5em; /* align with end of checkbox */
  font-size: 1em;
  color: gray;
}


/* Remove any fixed width limitations on lower widths */
@media handheld, (max-width: 600px) { 
body { max-width: none; }
}
/* Scale up the pixel dense versions */
@media handheld, (min-resolution: 150dpi) {
body {
  zoom: 1.5;
/*
Not this:
   transform: scale(1.5);
   transform-origin: 0 0;
This scales the bottom elements away from the bottom.
*/
}
}


/*
Override any theme colors uniformly
*/
/* All borders have the same color: */
#listPanel, #listHeader, #listFooter {
  /*border-color: LightGrey;*/
  border-color: #E3E9FF; /*-- brighter version */
}
#listSplitter {
  background-color: #E3E9FF;
}


